// <auto-generated />
using System;
using Iskedular.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iskedular.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250629033439_Monday")]
    partial class Monday
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Iskedular.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Professor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("YearSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Iskedular.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasAirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProjector")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSoundSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWhiteboard")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfComputers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 50,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Room 101",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Room 102",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Room 103",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 40,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Room 104",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 40,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Room 105",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 40,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Room 106",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 30,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Roth #1",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 30,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Roth #2",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 20,
                            Floor = "1st Floor",
                            HasAirConditioning = true,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Computer Laboratory",
                            NumberOfComputers = 20
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 150,
                            Floor = "1st Floor",
                            HasAirConditioning = true,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "(AVR) Audio Visual Room",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 300,
                            Floor = "1st Floor",
                            HasAirConditioning = true,
                            HasProjector = true,
                            HasSoundSystem = true,
                            HasTV = false,
                            HasWhiteboard = false,
                            Name = "Gymnasium",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 100,
                            Floor = "1st Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = true,
                            HasTV = false,
                            HasWhiteboard = false,
                            Name = "Chapel",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 50,
                            Floor = "2nd Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Room 201",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 50,
                            Floor = "2nd Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Room 202",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 50,
                            Floor = "2nd Floor",
                            HasAirConditioning = false,
                            HasProjector = true,
                            HasSoundSystem = false,
                            HasTV = false,
                            HasWhiteboard = true,
                            Name = "Room 203",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 40,
                            Floor = "2nd Floor",
                            HasAirConditioning = false,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Room 204",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 40,
                            Floor = "2nd Floor",
                            HasAirConditioning = false,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Room 205",
                            NumberOfComputers = 0
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 40,
                            Floor = "2nd Floor",
                            HasAirConditioning = false,
                            HasProjector = false,
                            HasSoundSystem = false,
                            HasTV = true,
                            HasWhiteboard = true,
                            Name = "Room 206",
                            NumberOfComputers = 0
                        });
                });

            modelBuilder.Entity("Iskedular.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@iskedular.com",
                            FirstName = "System",
                            LastName = "Admin",
                            PasswordHash = "$2b$10$QXOBvclWGFmC5DQCWhoY8e.tQuhG2kDYyFiNOsTwLQkkxgKte/wwK",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Iskedular.Models.Reservation", b =>
                {
                    b.HasOne("Iskedular.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iskedular.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Iskedular.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
